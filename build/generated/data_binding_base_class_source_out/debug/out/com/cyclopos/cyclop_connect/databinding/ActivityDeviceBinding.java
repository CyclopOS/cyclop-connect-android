// Generated by view binder compiler. Do not edit!
package com.cyclopos.cyclop_connect.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.viewbinding.ViewBinding;
import com.cyclopos.cyclop_connect.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDeviceBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button acceptButton;

  @NonNull
  public final ListView buttonsList;

  @NonNull
  public final LinearLayout errorMessageContainer;

  @NonNull
  public final AppCompatImageView errorMessageIcon;

  @NonNull
  public final TextView notReachableMessage;

  @NonNull
  public final Button pairButton;

  @NonNull
  public final TextView pairMessage;

  @NonNull
  public final ProgressBar pairProgress;

  @NonNull
  public final LinearLayout pairRequestButtons;

  @NonNull
  public final TextView pairVerification;

  @NonNull
  public final LinearLayout pairingButtons;

  @NonNull
  public final Button rejectButton;

  private ActivityDeviceBinding(@NonNull LinearLayout rootView, @NonNull Button acceptButton,
      @NonNull ListView buttonsList, @NonNull LinearLayout errorMessageContainer,
      @NonNull AppCompatImageView errorMessageIcon, @NonNull TextView notReachableMessage,
      @NonNull Button pairButton, @NonNull TextView pairMessage, @NonNull ProgressBar pairProgress,
      @NonNull LinearLayout pairRequestButtons, @NonNull TextView pairVerification,
      @NonNull LinearLayout pairingButtons, @NonNull Button rejectButton) {
    this.rootView = rootView;
    this.acceptButton = acceptButton;
    this.buttonsList = buttonsList;
    this.errorMessageContainer = errorMessageContainer;
    this.errorMessageIcon = errorMessageIcon;
    this.notReachableMessage = notReachableMessage;
    this.pairButton = pairButton;
    this.pairMessage = pairMessage;
    this.pairProgress = pairProgress;
    this.pairRequestButtons = pairRequestButtons;
    this.pairVerification = pairVerification;
    this.pairingButtons = pairingButtons;
    this.rejectButton = rejectButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDeviceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDeviceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_device, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDeviceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accept_button;
      Button acceptButton = rootView.findViewById(id);
      if (acceptButton == null) {
        break missingId;
      }

      id = R.id.buttons_list;
      ListView buttonsList = rootView.findViewById(id);
      if (buttonsList == null) {
        break missingId;
      }

      id = R.id.error_message_container;
      LinearLayout errorMessageContainer = rootView.findViewById(id);
      if (errorMessageContainer == null) {
        break missingId;
      }

      id = R.id.error_message_icon;
      AppCompatImageView errorMessageIcon = rootView.findViewById(id);
      if (errorMessageIcon == null) {
        break missingId;
      }

      id = R.id.not_reachable_message;
      TextView notReachableMessage = rootView.findViewById(id);
      if (notReachableMessage == null) {
        break missingId;
      }

      id = R.id.pair_button;
      Button pairButton = rootView.findViewById(id);
      if (pairButton == null) {
        break missingId;
      }

      id = R.id.pair_message;
      TextView pairMessage = rootView.findViewById(id);
      if (pairMessage == null) {
        break missingId;
      }

      id = R.id.pair_progress;
      ProgressBar pairProgress = rootView.findViewById(id);
      if (pairProgress == null) {
        break missingId;
      }

      id = R.id.pair_request_buttons;
      LinearLayout pairRequestButtons = rootView.findViewById(id);
      if (pairRequestButtons == null) {
        break missingId;
      }

      id = R.id.pair_verification;
      TextView pairVerification = rootView.findViewById(id);
      if (pairVerification == null) {
        break missingId;
      }

      id = R.id.pairing_buttons;
      LinearLayout pairingButtons = rootView.findViewById(id);
      if (pairingButtons == null) {
        break missingId;
      }

      id = R.id.reject_button;
      Button rejectButton = rootView.findViewById(id);
      if (rejectButton == null) {
        break missingId;
      }

      return new ActivityDeviceBinding((LinearLayout) rootView, acceptButton, buttonsList,
          errorMessageContainer, errorMessageIcon, notReachableMessage, pairButton, pairMessage,
          pairProgress, pairRequestButtons, pairVerification, pairingButtons, rejectButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
