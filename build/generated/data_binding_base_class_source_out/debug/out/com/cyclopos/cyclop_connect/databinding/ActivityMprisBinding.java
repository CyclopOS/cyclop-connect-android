// Generated by view binder compiler. Do not edit!
package com.cyclopos.cyclop_connect.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewpager2.widget.ViewPager2;
import com.cyclopos.cyclop_connect.R;
import com.google.android.material.tabs.TabLayout;
import java.lang.Override;

public final class ActivityMprisBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final ImageView albumArt;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final ViewPager2 mprisPager;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final TabLayout mprisTabs;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final Toolbar toolbar;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final ToolbarBinding toolbarLayout;

  private ActivityMprisBinding(@NonNull CoordinatorLayout rootView, @Nullable ImageView albumArt,
      @Nullable ViewPager2 mprisPager, @Nullable TabLayout mprisTabs, @Nullable Toolbar toolbar,
      @Nullable ToolbarBinding toolbarLayout) {
    this.rootView = rootView;
    this.albumArt = albumArt;
    this.mprisPager = mprisPager;
    this.mprisTabs = mprisTabs;
    this.toolbar = toolbar;
    this.toolbarLayout = toolbarLayout;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMprisBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMprisBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_mpris, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMprisBinding bind(@NonNull View rootView) {
    ImageView albumArt = rootView.findViewById(R.id.album_art);

    ViewPager2 mprisPager = rootView.findViewById(R.id.mpris_pager);

    TabLayout mprisTabs = rootView.findViewById(R.id.mpris_tabs);

    Toolbar toolbar = rootView.findViewById(R.id.toolbar);

    View toolbarLayout = rootView.findViewById(R.id.toolbar_layout);
    ToolbarBinding binding_toolbarLayout = toolbarLayout != null
        ? ToolbarBinding.bind(toolbarLayout)
        : null;

    return new ActivityMprisBinding((CoordinatorLayout) rootView, albumArt, mprisPager, mprisTabs,
        toolbar, binding_toolbarLayout);
  }
}
