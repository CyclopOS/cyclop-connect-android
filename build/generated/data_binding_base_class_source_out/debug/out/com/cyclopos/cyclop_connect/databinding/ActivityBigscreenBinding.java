// Generated by view binder compiler. Do not edit!
package com.cyclopos.cyclop_connect.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import com.cyclopos.cyclop_connect.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBigscreenBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ImageButton downButton;

  @NonNull
  public final ImageButton homeButton;

  @NonNull
  public final ImageButton leftButton;

  @NonNull
  public final ImageButton micButton;

  @NonNull
  public final ImageButton rightButton;

  @NonNull
  public final ImageButton selectButton;

  @NonNull
  public final ToolbarBinding toolbarLayout;

  @NonNull
  public final ImageButton upButton;

  private ActivityBigscreenBinding(@NonNull CoordinatorLayout rootView,
      @NonNull ImageButton downButton, @NonNull ImageButton homeButton,
      @NonNull ImageButton leftButton, @NonNull ImageButton micButton,
      @NonNull ImageButton rightButton, @NonNull ImageButton selectButton,
      @NonNull ToolbarBinding toolbarLayout, @NonNull ImageButton upButton) {
    this.rootView = rootView;
    this.downButton = downButton;
    this.homeButton = homeButton;
    this.leftButton = leftButton;
    this.micButton = micButton;
    this.rightButton = rightButton;
    this.selectButton = selectButton;
    this.toolbarLayout = toolbarLayout;
    this.upButton = upButton;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBigscreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBigscreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_bigscreen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBigscreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.down_button;
      ImageButton downButton = rootView.findViewById(id);
      if (downButton == null) {
        break missingId;
      }

      id = R.id.home_button;
      ImageButton homeButton = rootView.findViewById(id);
      if (homeButton == null) {
        break missingId;
      }

      id = R.id.left_button;
      ImageButton leftButton = rootView.findViewById(id);
      if (leftButton == null) {
        break missingId;
      }

      id = R.id.mic_button;
      ImageButton micButton = rootView.findViewById(id);
      if (micButton == null) {
        break missingId;
      }

      id = R.id.right_button;
      ImageButton rightButton = rootView.findViewById(id);
      if (rightButton == null) {
        break missingId;
      }

      id = R.id.select_button;
      ImageButton selectButton = rootView.findViewById(id);
      if (selectButton == null) {
        break missingId;
      }

      id = R.id.toolbar_layout;
      View toolbarLayout = rootView.findViewById(id);
      if (toolbarLayout == null) {
        break missingId;
      }
      ToolbarBinding binding_toolbarLayout = ToolbarBinding.bind(toolbarLayout);

      id = R.id.up_button;
      ImageButton upButton = rootView.findViewById(id);
      if (upButton == null) {
        break missingId;
      }

      return new ActivityBigscreenBinding((CoordinatorLayout) rootView, downButton, homeButton,
          leftButton, micButton, rightButton, selectButton, binding_toolbarLayout, upButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
